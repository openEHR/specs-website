x-web-environment: &web
  networks:
    - caddy
    - monitor
  depends_on:
    - caddy
  env_file:
    - path: ./.env
      required: false
  restart: unless-stopped
x-monitor-environment: &monitor
  networks:
    - monitor
  profiles:
    - monitor
  restart: unless-stopped

services:
  caddy:
    image: caddy
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - caddy-data:/data
      - caddy-config:/config
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./public:/app/public:ro
    networks:
      - caddy
      - monitor
    restart: unless-stopped

  web:
    <<: *web
    build:
      dockerfile: web.Dockerfile
    volumes:
      - web-repos:/data/repos
      - web-releases:/data/releases


  web-dev:
    <<: *web
    build:
      dockerfile: web-dev.Dockerfile
    profiles:
      - dev
    volumes:
      - .:/data/website
      - ./repos:/data/repos
      - ./releases:/data/releases

  prometheus:
    <<: *monitor
    image: prom/prometheus
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
  cadvisor:
    <<: *monitor
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
  node-exporter:
    <<: *monitor
    image: prom/node-exporter
  apache-exporter:
    <<: *monitor
    image: bitnami/apache-exporter:latest
    command: --scrape_uri="http://web/server-status?auto"

volumes:
  caddy-data:
  caddy-config:
  web-repos:
  web-releases:

networks:
  caddy:
  monitor:
